name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  # ------------------------
  # 1️⃣ Node.js CI Job
  # ------------------------
  ci:
    name: Node.js CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

  # ------------------------
  # 2️⃣ Terraform Job
  # ------------------------
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: ci   # runs only after CI succeeds
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

  # ------------------------
  # 3️⃣ Ansible Job
  # ------------------------
  ansible:
    name: Ansible Deploy
    runs-on: ubuntu-latest
    needs: terraform   # runs only after Terraform succeeds
    env:
      ANSIBLE_HOST_KEY_CHECKING: 'False'
      PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Ansible & Docker Collection
        run: |
          sudo apt update
          sudo apt install -y python3-pip sshpass
          pip3 install ansible
          ansible-galaxy collection install community.docker

      - name: Write private key
        run: |
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory.ini ansible/playbook.yml
